# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T08:10:34+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field, RootModel


class CountrySummary(BaseModel):
    callingCode: Optional[str] = Field(
        None,
        description='The calling code prefix used for phone numbers in this country',
    )
    countryKey: Optional[str] = Field(None, description='The ISO country-code')
    label: Optional[str] = Field(None, description='The localized name of the country')


class ErrorField(BaseModel):
    code: str = Field(
        ...,
        description='Short identifier for the error, suitable for indicating the specific error within client code',
    )
    message: Optional[str] = Field(
        None,
        description='Human-readable, English description of the problem with the contents of the field',
    )
    path: str = Field(
        ...,
        description='JSONPath referring to the field within the submitted data containing an error',
    )


class ErrorLimit(BaseModel):
    code: str = Field(
        ...,
        description='Short identifier for the error, suitable for indicating the specific error within client code',
    )
    fields: Optional[List[ErrorField]] = Field(
        None,
        description='List of the specific fields, and the errors found with their contents',
    )
    message: Optional[str] = Field(
        None, description='Human-readable, English description of the error'
    )
    retryAfterSec: int = Field(
        ..., description='Number of seconds to wait before attempting a similar request'
    )
    stack: Optional[List[str]] = Field(
        None,
        description='Stack trace indicating where the error occurred.<br/>\nNOTE: This attribute <strong>MAY</strong> be included for Development and Test environments.\nHowever, it <strong>MUST NOT</strong> be exposed from OTE nor Production systems',
    )


class State(BaseModel):
    label: Optional[str] = Field(
        None, description='The localized name of the state, province, or territory'
    )
    stateKey: Optional[str] = Field(None, description='The state code')


class Sort(Enum):
    key = 'key'
    label = 'label'


class Order(Enum):
    ascending = 'ascending'
    descending = 'descending'


class ArrayOfCountrySummary(RootModel[List[CountrySummary]]):
    root: List[CountrySummary]


class Country(BaseModel):
    callingCode: Optional[str] = Field(
        None,
        description='The calling code prefix used for phone numbers in this country',
    )
    countryKey: Optional[str] = Field(None, description='The ISO country-code')
    label: Optional[str] = Field(None, description='The localized name of the country')
    states: Optional[List[State]] = Field(
        None, description='List of states/provinces in this country'
    )


class Error(BaseModel):
    code: str = Field(
        ...,
        description='Short identifier for the error, suitable for indicating the specific error within client code',
    )
    fields: Optional[List[ErrorField]] = Field(
        None,
        description='List of the specific fields, and the errors found with their contents',
    )
    message: Optional[str] = Field(
        None, description='Human-readable, English description of the error'
    )
    stack: Optional[List[str]] = Field(
        None,
        description='Stack trace indicating where the error occurred.<br/>\nNOTE: This attribute <strong>MAY</strong> be included for Development and Test environments.\nHowever, it <strong>MUST NOT</strong> be exposed from OTE nor Production systems',
    )


class ArrayOfCountry(RootModel[List[Country]]):
    root: List[Country]
